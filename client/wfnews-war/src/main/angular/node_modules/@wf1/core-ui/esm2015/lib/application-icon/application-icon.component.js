import { Component, Input } from '@angular/core';
import { MatIconRegistry } from '@angular/material/icon';
import { DomSanitizer } from '@angular/platform-browser';
import { IconSize, IconType, Icons, IncidentType } from "./application-icon.model";
export class ApplicationIconComponent {
    constructor(iconRegistry, sanitizer) {
        this.iconSize = IconSize.DEFAULT;
        this.hasHalo = false;
        this.colourCode = IncidentType.DEFAULT;
        this.isBlinking = false;
        this.isCancelled = false;
        this.isAssignedToIncident = false;
        this.HALO_SUFFIX = '-halo';
        const registerIcon = (iconName, icon) => {
            iconRegistry.addSvgIconLiteral(iconName, sanitizer.bypassSecurityTrustHtml(icon));
        };
        registerIcon(IconType.INCIDENT, Icons.incident.icon);
        registerIcon(IconType.INCIDENT_WITH_STATUS, Icons.incident.icon);
        registerIcon(IconType.INCIDENT_AGENCY_ASSIST, Icons.incidentAgencyAssist.icon);
        registerIcon(IconType.INCIDENT_FIELD_ACTIVITY, Icons.incidentFieldActivity.icon);
        registerIcon(IconType.INCIDENT_FIELD_ACTIVITY_OTHER, Icons.incidentFieldActivityOther.icon);
        registerIcon(IconType.INCIDENT_FLOOD, Icons.incidentFlood.icon);
        registerIcon(IconType.INCIDENT_FUELS_MANAGEMENT, Icons.incidentFuelsManagement.icon);
        registerIcon(IconType.INCIDENT_LANDSLIDE, Icons.incidentLandslide.icon);
        registerIcon(IconType.INCIDENT_OTHER_EMERGENCY, Icons.incidentOtherEmergency.icon);
        registerIcon(IconType.INCIDENT_PRESCRIBED_FIRE, Icons.incidentPrescribedFire.icon);
        registerIcon(IconType.INCIDENT_TRAINING, Icons.incidentTraining.icon);
        registerIcon(IconType.REPORT_OF_FIRE, Icons.rof.icon);
        registerIcon(IconType.NO_MORE_REPORT_OF_FIRE, Icons.nrof.icon);
        registerIcon(IconType.NO_MORE_REPORT_OF_FIRE_DARK, Icons.nrof.dark);
        registerIcon(IconType.NO_MORE_REPORT_OF_FIRE_LIGHT, Icons.nrof.light);
        registerIcon(IconType.INCIDENT + this.HALO_SUFFIX, Icons.incident.halo);
        registerIcon(IconType.REPORT_OF_FIRE + this.HALO_SUFFIX, Icons.rof.halo);
        registerIcon(IconType.PLACE_NAME_SEARCH, Icons.placeNameSearch.icon);
        registerIcon(IconType.POINT_ID, Icons.pointId.icon);
        registerIcon(IconType.FILTER_CANCEL, Icons.filterCancel.icon);
    }
    ngOnInit() {
    }
    getHaloType() {
        return this.iconType + this.HALO_SUFFIX;
    }
    getRootIconClasses() {
        let iconSizeClass;
        if (this.iconSize === IconSize.TOOLBAR) {
            iconSizeClass = 'wf1-icon-size-toolbar';
        }
        else if (this.iconSize === IconSize.LIST_SMALL) {
            iconSizeClass = 'wf1-icon-size-list-small';
        }
        else if (this.iconSize === IconSize.LIST_LARGE) {
            iconSizeClass = 'wf1-icon-size-list-large';
        }
        else { //Default
            iconSizeClass = 'wf1-icon-size-toolbar';
        }
        return `wf1-application-icon ${iconSizeClass}`;
    }
    getMainIconClasses() {
        return `${this.colourCode} ${this.isBlinking ? 'wf1-icon-blink' : ''} ${this.isCancelled || this.isAssignedToIncident ? 'wf1-icon-contained' : ''}`;
    }
    getHaloIconClasses() {
        return `${this.isBlinking ? 'wf1-icon-blink' : ''} ${this.isCancelled || this.isAssignedToIncident ? 'wf1-icon-contained' : ''}`;
    }
}
ApplicationIconComponent.decorators = [
    { type: Component, args: [{
                selector: 'wf1-application-icon',
                template: "<div [ngClass]=\"getRootIconClasses()\">\n  <div class=\"wf1-main-icon\">\n    <mat-icon [ngClass]=\"getMainIconClasses()\" [svgIcon]=\"iconType\" color=\"primary\"></mat-icon>\n  </div>\n  <div class=\"wf1-halo-icon\" *ngIf=\"hasHalo\">\n    <mat-icon [ngClass]=\"getHaloIconClasses()\" [svgIcon]=\"getHaloType()\"></mat-icon>\n  </div>\n  <div class=\"wf1-cancelled-icon\" *ngIf=\"isCancelled\">\n    <mat-icon>block</mat-icon>\n  </div>\n  <div class=\"wf1-assigned-to-incident-icon\" *ngIf=\"isAssignedToIncident\">\n    <mat-icon>panorama_fish_eye</mat-icon>\n  </div>\n</div>\n",
                styles: [""]
            },] }
];
ApplicationIconComponent.ctorParameters = () => [
    { type: MatIconRegistry },
    { type: DomSanitizer }
];
ApplicationIconComponent.propDecorators = {
    iconType: [{ type: Input }],
    iconSize: [{ type: Input }],
    hasHalo: [{ type: Input }],
    colourCode: [{ type: Input }],
    isBlinking: [{ type: Input }],
    isCancelled: [{ type: Input }],
    isAssignedToIncident: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,